#!/usr/bin/env bash
set -euo pipefail

target_file=go.mod
issues_folder=issues
issues_file=$issues_folder/issues.json

if [ ! -d $issues_folder ]; then
  mkdir $issues_folder
fi
if [ ! -f $issues_file ]; then
  echo '[]' > $issues_file
fi
for file in $(find sources -maxdepth 2 -type f -name $target_file); do
  echo "Found file: $file"
  report="$(dirname $file)"/component-report.json
  if [ ! -f $report ]; then 
    npx @RHEcosystemAppEng/exhort-javascript-api component "$target_file" "$(<"$file")" > "$report" || {
      echo "Command failed. Removing the empty or partial report: $report"
      rm -f "$report"
    }
    echo "Generated report: $report"
  fi
  if [ -f $report ]; then
      # Extract the relevant data using jq, keep them flat, and append to $issues_file
      jq -c 'select( .providers.osv.sources.osv.dependencies != null) | .providers.osv.sources.osv.dependencies[] | {package: .ref, cves: [.issues[].id], file: "'$file'"}' $report | while read item; do
          # Append the item to the existing flat array in $issues_file
          jq --argjson newItem "$item" '. += [$newItem]' $issues_file > temp.json && mv temp.json $issues_file
      done
  fi
done

jq '
  group_by(.package) | 
  map({
    package: .[0].package, 
    cves: map(.cves) | add, 
    files: map(.file) 
  })
' $issues_file > $issues_folder/grouped.json